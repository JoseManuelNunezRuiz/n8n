"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChatHubSettingsService = void 0;
const db_1 = require("@n8n/db");
const di_1 = require("@n8n/di");
const KEY = 'chat.access.enabled';
let ChatHubSettingsService = class ChatHubSettingsService {
    constructor(settingsRepository) {
        this.settingsRepository = settingsRepository;
    }
    async getEnabled() {
        const row = await this.settingsRepository.findByKey(KEY);
        if (!row)
            return true;
        return row.value === 'true';
    }
    async setEnabled(enabled) {
        const value = enabled ? 'true' : 'false';
        await this.settingsRepository.upsert({ key: KEY, value, loadOnStartup: true }, ['key']);
    }
};
exports.ChatHubSettingsService = ChatHubSettingsService;
exports.ChatHubSettingsService = ChatHubSettingsService = __decorate([
    (0, di_1.Service)(),
    __metadata("design:paramtypes", [db_1.SettingsRepository])
], ChatHubSettingsService);
//# sourceMappingURL=chat-hub.settings.service.js.map