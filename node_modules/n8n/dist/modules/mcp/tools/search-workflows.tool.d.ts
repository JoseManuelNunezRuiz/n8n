import { type User } from '@n8n/db';
import z from 'zod';
import type { ToolDefinition, SearchWorkflowsParams, SearchWorkflowsResult } from '../mcp.types';
import type { WorkflowService } from '../../../workflows/workflow.service';
declare const inputSchema: {
    limit: z.ZodOptional<z.ZodNumber>;
    active: z.ZodOptional<z.ZodBoolean>;
    name: z.ZodOptional<z.ZodString>;
    projectId: z.ZodOptional<z.ZodString>;
};
export declare const createSearchWorkflowsTool: (user: User, workflowService: WorkflowService) => ToolDefinition<typeof inputSchema>;
export declare function searchWorkflows(user: User, workflowService: WorkflowService, { limit, active, name, projectId }: SearchWorkflowsParams): Promise<SearchWorkflowsResult>;
export {};
