import type { IWorkflowSettings, WorkflowFEMeta } from 'n8n-workflow';
import z from 'zod';
export declare const nodeSchema: z.ZodObject<{
    name: z.ZodString;
    type: z.ZodString;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    name: z.ZodString;
    type: z.ZodString;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    name: z.ZodString;
    type: z.ZodString;
}, z.ZodTypeAny, "passthrough">>;
export declare const tagSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    id: z.ZodString;
    name: z.ZodString;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    id: z.ZodString;
    name: z.ZodString;
}, z.ZodTypeAny, "passthrough">>;
export declare const workflowSettingsSchema: z.ZodNullable<z.ZodType<IWorkflowSettings, z.ZodTypeDef, IWorkflowSettings>>;
export declare const workflowMetaSchema: z.ZodNullable<z.ZodType<WorkflowFEMeta, z.ZodTypeDef, WorkflowFEMeta>>;
export declare const workflowDetailsOutputSchema: z.ZodObject<{
    workflow: z.ZodObject<{
        id: z.ZodString;
        name: z.ZodNullable<z.ZodString>;
        active: z.ZodBoolean;
        isArchived: z.ZodBoolean;
        versionId: z.ZodString;
        triggerCount: z.ZodNumber;
        createdAt: z.ZodNullable<z.ZodString>;
        updatedAt: z.ZodNullable<z.ZodString>;
        settings: z.ZodNullable<z.ZodType<IWorkflowSettings, z.ZodTypeDef, IWorkflowSettings>>;
        connections: z.ZodRecord<z.ZodString, z.ZodUnknown>;
        nodes: z.ZodArray<z.ZodObject<{
            name: z.ZodString;
            type: z.ZodString;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            name: z.ZodString;
            type: z.ZodString;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            name: z.ZodString;
            type: z.ZodString;
        }, z.ZodTypeAny, "passthrough">>, "many">;
        tags: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            id: z.ZodString;
            name: z.ZodString;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            id: z.ZodString;
            name: z.ZodString;
        }, z.ZodTypeAny, "passthrough">>, "many">;
        meta: z.ZodNullable<z.ZodType<WorkflowFEMeta, z.ZodTypeDef, WorkflowFEMeta>>;
        parentFolderId: z.ZodNullable<z.ZodString>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        id: z.ZodString;
        name: z.ZodNullable<z.ZodString>;
        active: z.ZodBoolean;
        isArchived: z.ZodBoolean;
        versionId: z.ZodString;
        triggerCount: z.ZodNumber;
        createdAt: z.ZodNullable<z.ZodString>;
        updatedAt: z.ZodNullable<z.ZodString>;
        settings: z.ZodNullable<z.ZodType<IWorkflowSettings, z.ZodTypeDef, IWorkflowSettings>>;
        connections: z.ZodRecord<z.ZodString, z.ZodUnknown>;
        nodes: z.ZodArray<z.ZodObject<{
            name: z.ZodString;
            type: z.ZodString;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            name: z.ZodString;
            type: z.ZodString;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            name: z.ZodString;
            type: z.ZodString;
        }, z.ZodTypeAny, "passthrough">>, "many">;
        tags: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            id: z.ZodString;
            name: z.ZodString;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            id: z.ZodString;
            name: z.ZodString;
        }, z.ZodTypeAny, "passthrough">>, "many">;
        meta: z.ZodNullable<z.ZodType<WorkflowFEMeta, z.ZodTypeDef, WorkflowFEMeta>>;
        parentFolderId: z.ZodNullable<z.ZodString>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        id: z.ZodString;
        name: z.ZodNullable<z.ZodString>;
        active: z.ZodBoolean;
        isArchived: z.ZodBoolean;
        versionId: z.ZodString;
        triggerCount: z.ZodNumber;
        createdAt: z.ZodNullable<z.ZodString>;
        updatedAt: z.ZodNullable<z.ZodString>;
        settings: z.ZodNullable<z.ZodType<IWorkflowSettings, z.ZodTypeDef, IWorkflowSettings>>;
        connections: z.ZodRecord<z.ZodString, z.ZodUnknown>;
        nodes: z.ZodArray<z.ZodObject<{
            name: z.ZodString;
            type: z.ZodString;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            name: z.ZodString;
            type: z.ZodString;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            name: z.ZodString;
            type: z.ZodString;
        }, z.ZodTypeAny, "passthrough">>, "many">;
        tags: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            id: z.ZodString;
            name: z.ZodString;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            id: z.ZodString;
            name: z.ZodString;
        }, z.ZodTypeAny, "passthrough">>, "many">;
        meta: z.ZodNullable<z.ZodType<WorkflowFEMeta, z.ZodTypeDef, WorkflowFEMeta>>;
        parentFolderId: z.ZodNullable<z.ZodString>;
    }, z.ZodTypeAny, "passthrough">>;
    triggerInfo: z.ZodString;
}, "strip", z.ZodTypeAny, {
    workflow: {
        tags: z.objectOutputType<{
            id: z.ZodString;
            name: z.ZodString;
        }, z.ZodTypeAny, "passthrough">[];
        id: string;
        name: string | null;
        active: boolean;
        versionId: string;
        createdAt: string | null;
        updatedAt: string | null;
        nodes: z.objectOutputType<{
            name: z.ZodString;
            type: z.ZodString;
        }, z.ZodTypeAny, "passthrough">[];
        connections: Record<string, unknown>;
        isArchived: boolean;
        parentFolderId: string | null;
        settings: IWorkflowSettings | null;
        meta: WorkflowFEMeta | null;
        triggerCount: number;
    } & {
        [k: string]: unknown;
    };
    triggerInfo: string;
}, {
    workflow: {
        tags: z.objectInputType<{
            id: z.ZodString;
            name: z.ZodString;
        }, z.ZodTypeAny, "passthrough">[];
        id: string;
        name: string | null;
        active: boolean;
        versionId: string;
        createdAt: string | null;
        updatedAt: string | null;
        nodes: z.objectInputType<{
            name: z.ZodString;
            type: z.ZodString;
        }, z.ZodTypeAny, "passthrough">[];
        connections: Record<string, unknown>;
        isArchived: boolean;
        parentFolderId: string | null;
        settings: IWorkflowSettings | null;
        meta: WorkflowFEMeta | null;
        triggerCount: number;
    } & {
        [k: string]: unknown;
    };
    triggerInfo: string;
}>;
