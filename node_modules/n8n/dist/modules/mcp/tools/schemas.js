"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.workflowDetailsOutputSchema = exports.workflowMetaSchema = exports.workflowSettingsSchema = exports.tagSchema = exports.nodeSchema = void 0;
const zod_1 = __importDefault(require("zod"));
exports.nodeSchema = zod_1.default
    .object({
    name: zod_1.default.string(),
    type: zod_1.default.string(),
})
    .passthrough();
exports.tagSchema = zod_1.default.object({ id: zod_1.default.string(), name: zod_1.default.string() }).passthrough();
exports.workflowSettingsSchema = zod_1.default
    .custom((_value) => true)
    .nullable();
exports.workflowMetaSchema = zod_1.default
    .custom((_value) => true)
    .nullable();
exports.workflowDetailsOutputSchema = zod_1.default.object({
    workflow: zod_1.default
        .object({
        id: zod_1.default.string(),
        name: zod_1.default.string().nullable(),
        active: zod_1.default.boolean(),
        isArchived: zod_1.default.boolean(),
        versionId: zod_1.default.string(),
        triggerCount: zod_1.default.number(),
        createdAt: zod_1.default.string().nullable(),
        updatedAt: zod_1.default.string().nullable(),
        settings: exports.workflowSettingsSchema,
        connections: zod_1.default.record(zod_1.default.unknown()),
        nodes: zod_1.default.array(exports.nodeSchema),
        tags: zod_1.default.array(exports.tagSchema),
        meta: exports.workflowMetaSchema,
        parentFolderId: zod_1.default.string().nullable(),
    })
        .passthrough()
        .describe('Sanitized workflow data safe for MCP consumption'),
    triggerInfo: zod_1.default
        .string()
        .describe('Human-readable instructions describing how to trigger the workflow'),
});
//# sourceMappingURL=schemas.js.map