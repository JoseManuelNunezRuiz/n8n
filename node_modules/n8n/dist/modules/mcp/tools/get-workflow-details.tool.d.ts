import type { User } from '@n8n/db';
import z from 'zod';
import type { ToolDefinition, WorkflowDetailsResult } from '../mcp.types';
import { workflowDetailsOutputSchema } from './schemas';
import { type WebhookEndpoints } from './webhook-utils';
import type { CredentialsService } from '../../../credentials/credentials.service';
import type { WorkflowFinderService } from '../../../workflows/workflow-finder.service';
declare const inputSchema: {
    workflowId: z.ZodString;
};
export type WorkflowDetailsOutputSchema = typeof workflowDetailsOutputSchema;
export declare const createWorkflowDetailsTool: (user: User, baseWebhookUrl: string, workflowFinderService: WorkflowFinderService, credentialsService: CredentialsService, endpoints: WebhookEndpoints) => ToolDefinition<typeof inputSchema>;
export declare function getWorkflowDetails(user: User, baseWebhookUrl: string, workflowFinderService: WorkflowFinderService, credentialsService: CredentialsService, endpoints: WebhookEndpoints, { workflowId }: {
    workflowId: string;
}): Promise<WorkflowDetailsResult>;
export {};
