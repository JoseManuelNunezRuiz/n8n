{"version":3,"sources":["../browser/src/query-builder/QueryPartialEntity.ts"],"names":[],"mappings":"","file":"QueryPartialEntity.js","sourcesContent":["import { ObjectLiteral } from \"../common/ObjectLiteral\"\n\n/**\n * Make all properties in T optional\n */\nexport type QueryPartialEntity<T> = {\n    [P in keyof T]?: T[P] | (() => string)\n}\n\n/**\n * Make all properties in T optional. Deep version.\n */\nexport type QueryDeepPartialEntity<T> = _QueryDeepPartialEntity<\n    ObjectLiteral extends T ? unknown : T,\n    never\n>;\n\ntype _QueryDeepPartialEntity<Entity, Seen = never> = {\n    [Property in keyof Entity]?: (\n        Entity[Property] extends Seen\n            ? Entity[Property]  // break cycle\n            : Entity[Property] extends Array<infer ArrayItem>\n                ? Array<_QueryDeepPartialEntity<ArrayItem, Seen | Entity[Property]>>\n                : Entity[Property] extends ReadonlyArray<infer ArrayItem>\n                    ? ReadonlyArray<_QueryDeepPartialEntity<ArrayItem, Seen | Entity[Property]>>\n                    : _QueryDeepPartialEntity<Entity[Property], Seen | Entity[Property]>\n    ) | (() => string);\n};\n"],"sourceRoot":".."}